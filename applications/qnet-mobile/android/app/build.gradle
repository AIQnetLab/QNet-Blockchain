apply plugin: "com.android.application"
apply plugin: "com.facebook.react"

/**
 * QNet Mobile - Android Production Build Configuration
 * Optimized for production release with security and performance
 */

android {
    namespace "io.qnet.mobile"
    compileSdkVersion 34
    buildToolsVersion "34.0.0"

    defaultConfig {
        applicationId "io.qnet.mobile"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode 200
        versionName "2.0.0"
        
        multiDexEnabled true
        
        // Production build optimizations
        proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
        
        // App metadata
        resValue "string", "app_name", "QNet Wallet"
        resValue "string", "app_description", "Dual Network Blockchain Wallet"
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            if (project.hasProperty('QNET_UPLOAD_STORE_FILE')) {
                storeFile file(QNET_UPLOAD_STORE_FILE)
                storePassword QNET_UPLOAD_STORE_PASSWORD
                keyAlias QNET_UPLOAD_KEY_ALIAS
                keyPassword QNET_UPLOAD_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            debuggable true
            minifyEnabled false
            shrinkResources false
        }
        release {
            signingConfig signingConfigs.release
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            
            // Production optimizations
            zipAlignEnabled true
            crunchPngs true
            
            // Build config fields
            buildConfigField "String", "API_ENDPOINT", '"https://bridge.qnet.io"'
            buildConfigField "String", "SOLANA_RPC", '"https://api.mainnet-beta.solana.com"'
            buildConfigField "String", "QNET_RPC", '"https://rpc.qnet.io"'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    packagingOptions {
        pickFirst "lib/x86/libc++_shared.so"
        pickFirst "lib/x86_64/libc++_shared.so"
        pickFirst "lib/arm64-v8a/libc++_shared.so"
        pickFirst "lib/armeabi-v7a/libc++_shared.so"
        
        // Exclude unnecessary files
        exclude "META-INF/DEPENDENCIES"
        exclude "META-INF/LICENSE"
        exclude "META-INF/LICENSE.txt"
        exclude "META-INF/NOTICE"
        exclude "META-INF/NOTICE.txt"
    }

    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "com.facebook.react:react-android"
    implementation "com.facebook.react:flipper-integration"
    
    // Hermes JavaScript engine
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
    
    // Required for React Native
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'com.google.android.material:material:1.10.0'
    
    // Crypto and security
    implementation 'androidx.security:security-crypto:1.1.0-alpha06'
    implementation 'androidx.biometric:biometric:1.1.0'
    
    // Performance monitoring
    implementation 'com.google.firebase:firebase-perf:20.5.1'
    implementation 'com.google.firebase:firebase-crashlytics:18.6.1'
    
    debugImplementation("com.facebook.flipper:flipper:${FLIPPER_VERSION}")
    debugImplementation("com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}") {
        exclude group:'com.squareup.okhttp3', module:'okhttp'
    }
    debugImplementation("com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}")
    
    if (hermesEnabled.toBoolean()) {
        debugImplementation("com.facebook.flipper:flipper-hermes-executor:${FLIPPER_VERSION}")
    } else {
        debugImplementation("com.facebook.flipper:flipper-rhino-executor:${FLIPPER_VERSION}")
    }
}

// Bundle task for production
task bundleReleaseJsAndAssets(type: Exec) {
    group = "react"
    description = "Bundle JS and assets for release"
    
    commandLine "npx", "react-native", "bundle",
        "--platform", "android",
        "--dev", "false",
        "--entry-file", "index.js",
        "--bundle-output", "android/app/src/main/assets/index.android.bundle",
        "--assets-dest", "android/app/src/main/res"
}

// Clean task
task cleanBuildArtifacts(type: Delete) {
    delete "android/app/src/main/assets/index.android.bundle"
    delete "android/app/src/main/res/drawable-*"
    delete "android/app/src/main/res/raw"
}

// Production build task
task buildProductionAPK(type: GradleBuild) {
    tasks = ['clean', 'bundleReleaseJsAndAssets', 'assembleRelease']
}

// Generate AAB for Play Store
task buildProductionAAB(type: GradleBuild) {
    tasks = ['clean', 'bundleReleaseJsAndAssets', 'bundleRelease']
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project) 