services:
  # Genesis Super Node (Block Producer)
  qnet-genesis:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: qnet-genesis
    hostname: genesis
    logging:
      driver: "json-file"
      options:
        max-size: "10m"     # Smaller files for faster log rotation
        max-file: "2"       # Only 2 files max (20MB total)
        compress: "true"    # Compress old logs to save space
    environment:
      - RUST_LOG=info,qnet=debug
      - QNET_TESTNET=1
      - QNET_FREE_GENESIS_ACTIVATION=1
      - QNET_ENABLE_MICROBLOCKS=1
      - QNET_DETAILED_LOGGING=1
      - QNET_IS_LEADER=1
      - QNET_MICROBLOCK_PRODUCER=1
      - QNET_PRODUCTION_ENABLED=1
      - QNET_SKIP_BURN_CHECK=1
    command: >
      qnet-node
      --data-dir /app/data
      --p2p-port 9876
      --rpc-port 8545
      --node-type super
      --region na
      --producer
      --high-performance
      --enable-metrics
    ports:
      - "8545:8545"   # RPC API
      - "9876:9876"   # P2P network
      - "9945:9945"   # Metrics (RPC port + 400)
    volumes:
      - ./genesis-data:/app/data
      # Removed log volume mount - logs will be stored in container and auto-deleted
    networks:
      - qnet-testnet
    restart: unless-stopped
    mem_limit: 4g
    cpus: '2.0'
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -f http://localhost:8545/rpc -d '{\"method\":\"ping\",\"params\":[],\"id\":1}' -H 'Content-Type: application/json' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Validator Node 1 (Full Node)
  qnet-validator1:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: qnet-validator1
    hostname: validator1
    logging:
      driver: "json-file"
      options:
        max-size: "10m"     # Smaller files for faster log rotation
        max-file: "2"       # Only 2 files max (20MB total)
        compress: "true"    # Compress old logs to save space
    environment:
      - RUST_LOG=info,qnet=debug
      - QNET_TESTNET=1
      - QNET_FREE_GENESIS_ACTIVATION=1
      - QNET_ENABLE_MICROBLOCKS=1
      - QNET_DETAILED_LOGGING=1
      - QNET_FULL_SYNC=1
      - QNET_SYNC_ALL_MICROBLOCKS=1
      - QNET_SKIP_BURN_CHECK=1
    command: >
      qnet-node
      --data-dir /app/data
      --p2p-port 9877
      --rpc-port 8546
      --node-type full
      --region na
      --bootstrap-peers genesis:9876
      --high-performance
      --enable-metrics
    ports:
      - "8546:8546"   # RPC API
      - "9877:9877"   # P2P network
      - "9946:9946"   # Metrics (RPC port + 400)
    volumes:
      - ./validator1-data:/app/data
      # Removed log volume mount - logs will be stored in container and auto-deleted
    networks:
      - qnet-testnet
    restart: unless-stopped
    mem_limit: 2g
    cpus: '1.0'
    depends_on:
      - qnet-genesis
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -f http://localhost:8546/rpc -d '{\"method\":\"ping\",\"params\":[],\"id\":1}' -H 'Content-Type: application/json' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

  # Validator Node 2 (Full Node)
  qnet-validator2:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: qnet-validator2
    hostname: validator2
    logging:
      driver: "json-file"
      options:
        max-size: "10m"     # Smaller files for faster log rotation
        max-file: "2"       # Only 2 files max (20MB total)
        compress: "true"    # Compress old logs to save space
    environment:
      - RUST_LOG=info,qnet=debug
      - QNET_TESTNET=1
      - QNET_FREE_GENESIS_ACTIVATION=1
      - QNET_ENABLE_MICROBLOCKS=1
      - QNET_DETAILED_LOGGING=1
      - QNET_FULL_SYNC=1
      - QNET_SYNC_ALL_MICROBLOCKS=1
      - QNET_SKIP_BURN_CHECK=1
    command: >
      qnet-node
      --data-dir /app/data
      --p2p-port 9878
      --rpc-port 8547
      --node-type full
      --region na
      --bootstrap-peers genesis:9876,validator1:9877
      --high-performance
      --enable-metrics
    ports:
      - "8547:8547"   # RPC API
      - "9878:9878"   # P2P network
      - "9947:9947"   # Metrics (RPC port + 400)
    volumes:
      - ./validator2-data:/app/data
      # Removed log volume mount - logs will be stored in container and auto-deleted
    networks:
      - qnet-testnet
    restart: unless-stopped
    mem_limit: 2g
    cpus: '1.0'
    depends_on:
      - qnet-genesis
      - qnet-validator1
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -f http://localhost:8547/rpc -d '{\"method\":\"ping\",\"params\":[],\"id\":1}' -H 'Content-Type: application/json' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    container_name: qnet-prometheus
    ports:
      - "9093:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - qnet-testnet
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: qnet-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=qnet2025
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - qnet-testnet
    restart: unless-stopped

networks:
  qnet-testnet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  prometheus-data:
  grafana-data: 