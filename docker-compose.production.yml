services:
  # Genesis Super Node (Block Producer)
  qnet-genesis:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: qnet-genesis
    hostname: genesis
    logging:
      driver: "json-file"
      options:
        max-size: "10m"     # Smaller files for faster log rotation
        max-file: "2"       # Only 2 files max (20MB total)
        compress: "true"    # Compress old logs to save space
    environment:
      - RUST_LOG=info,qnet=debug
      - QNET_TESTNET=1
      - QNET_FREE_GENESIS_ACTIVATION=1
      - QNET_ENABLE_MICROBLOCKS=1
      - QNET_DETAILED_LOGGING=1
      - QNET_IS_LEADER=1
      - QNET_MICROBLOCK_PRODUCER=1
      - QNET_PRODUCTION_ENABLED=1
      - QNET_SKIP_BURN_CHECK=1
      - QNET_NODE_TYPE=super
      - QNET_DATA_DIR=/app/data
      - QNET_BOOTSTRAP_ID=001
      - QNET_GENESIS_BOOTSTRAP=1
      - QNET_P2P_PORT=9876
      - QNET_API_PORT=8001
      - QNET_REGION=na
      - DOCKER_ENV=1
    command: qnet-node
    ports:
      - "8001:8001"   # Unified API/RPC
      - "9876:9876"   # P2P network
      - "8401:8401"   # Metrics (API port + 400)
    volumes:
      # Use named volume for blockchain data persistence, tmpfs for logs
      - genesis-blockchain-data:/app/data/blockchain
      # Logs stored in container tmpfs - auto-deleted on container removal
    tmpfs:
      - /app/data/logs:noexec,nosuid,size=500m
      - /app/data/temp:noexec,nosuid,size=200m
    networks:
      - qnet-testnet
    restart: unless-stopped
    mem_limit: 4g
    cpus: '2.0'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/v1/node/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Validator Node 1 (Full Node)
  qnet-validator1:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: qnet-validator1
    hostname: validator1
    logging:
      driver: "json-file"
      options:
        max-size: "10m"     # Smaller files for faster log rotation
        max-file: "2"       # Only 2 files max (20MB total)
        compress: "true"    # Compress old logs to save space
    environment:
      - RUST_LOG=info,qnet=debug
      - QNET_TESTNET=1
      - QNET_FREE_GENESIS_ACTIVATION=1
      - QNET_ENABLE_MICROBLOCKS=1
      - QNET_DETAILED_LOGGING=1
      - QNET_FULL_SYNC=1
      - QNET_SYNC_ALL_MICROBLOCKS=1
      - QNET_SKIP_BURN_CHECK=1
      - QNET_NODE_TYPE=full
      - QNET_DATA_DIR=/app/data
      - QNET_P2P_PORT=9877
      - QNET_API_PORT=8001
      - QNET_REGION=eu
      - DOCKER_ENV=1
    command: qnet-node
    ports:
      - "8002:8001"   # Unified API/RPC (mapped to 8002 on host)
      - "9877:9877"   # P2P network
      - "8402:8401"   # Metrics (mapped to 8402 on host)
    volumes:
      # Use named volume for blockchain data persistence, tmpfs for logs
      - validator1-blockchain-data:/app/data/blockchain
      # Logs stored in container tmpfs - auto-deleted on container removal
    tmpfs:
      - /app/data/logs:noexec,nosuid,size=500m
      - /app/data/temp:noexec,nosuid,size=200m
    networks:
      - qnet-testnet
    restart: unless-stopped
    mem_limit: 2g
    cpus: '1.0'
    depends_on:
      - qnet-genesis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/v1/node/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

  # Validator Node 2 (Full Node)
  qnet-validator2:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: qnet-validator2
    hostname: validator2
    logging:
      driver: "json-file"
      options:
        max-size: "10m"     # Smaller files for faster log rotation
        max-file: "2"       # Only 2 files max (20MB total)
        compress: "true"    # Compress old logs to save space
    environment:
      - RUST_LOG=info,qnet=debug
      - QNET_TESTNET=1
      - QNET_FREE_GENESIS_ACTIVATION=1
      - QNET_ENABLE_MICROBLOCKS=1
      - QNET_DETAILED_LOGGING=1
      - QNET_FULL_SYNC=1
      - QNET_SYNC_ALL_MICROBLOCKS=1
      - QNET_SKIP_BURN_CHECK=1
      - QNET_NODE_TYPE=full
      - QNET_DATA_DIR=/app/data
      - QNET_P2P_PORT=9878
      - QNET_API_PORT=8001
      - QNET_REGION=asia
      - DOCKER_ENV=1
    command: qnet-node
    ports:
      - "8003:8001"   # Unified API/RPC (mapped to 8003 on host)
      - "9878:9878"   # P2P network
      - "8403:8401"   # Metrics (mapped to 8403 on host)
    volumes:
      # Use named volume for blockchain data persistence, tmpfs for logs
      - validator2-blockchain-data:/app/data/blockchain
      # Logs stored in container tmpfs - auto-deleted on container removal
    tmpfs:
      - /app/data/logs:noexec,nosuid,size=500m
      - /app/data/temp:noexec,nosuid,size=200m
    networks:
      - qnet-testnet
    restart: unless-stopped
    mem_limit: 2g
    cpus: '1.0'
    depends_on:
      - qnet-genesis
      - qnet-validator1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/v1/node/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    container_name: qnet-prometheus
    ports:
      - "9093:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - qnet-testnet
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: qnet-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=qnet2025
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - qnet-testnet
    restart: unless-stopped

networks:
  qnet-testnet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  prometheus-data:
  grafana-data:
  # Named volumes for blockchain data (persistent)
  genesis-blockchain-data:
  validator1-blockchain-data:
  validator2-blockchain-data: 