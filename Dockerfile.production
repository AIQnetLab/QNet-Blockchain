# Multi-stage build for production QNet node
FROM rust:1.74-slim as builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    pkg-config \
    libssl-dev \
    libclang-dev \
    git \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /build

# Copy only the integration node source first
COPY development/qnet-integration/ ./qnet-integration/

# Copy core modules if they exist
COPY core/ ./core/ 2>/dev/null || echo "Core modules not found, using standalone build"

# Copy workspace Cargo.toml if exists
COPY Cargo.toml ./Cargo.toml 2>/dev/null || echo "No workspace Cargo.toml"

# Create minimal Cargo.toml for standalone build if needed
RUN if [ ! -f ./Cargo.toml ]; then \
    echo '[workspace]' > ./Cargo.toml && \
    echo 'members = ["qnet-integration"]' >> ./Cargo.toml; \
    fi

# Build the production node
WORKDIR /build/qnet-integration
RUN cargo build --release --bin qnet-node

# Final runtime image
FROM ubuntu:22.04

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libssl3 \
    curl \
    ca-certificates \
    netcat-openbsd \
    && rm -rf /var/lib/apt/lists/*

# Create qnet user and directories
RUN groupadd -r qnet && useradd -r -g qnet qnet
RUN mkdir -p /app/{data,logs} && chown -R qnet:qnet /app

# Copy binary from builder
COPY --from=builder /build/qnet-integration/target/release/qnet-node /usr/local/bin/qnet-node

# Set permissions
RUN chmod +x /usr/local/bin/qnet-node

# Switch to qnet user
USER qnet

# Create data directories
WORKDIR /app

# Expose ports (RPC, P2P, Metrics)
EXPOSE 8545 8546 8547 9876 9877 9878 9945 9946 9947

# Default command
CMD ["qnet-node"] 