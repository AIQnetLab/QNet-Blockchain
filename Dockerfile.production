# Production QNet Blockchain Node - Direct Build
FROM rust:1.83-slim as builder

WORKDIR /build

# Install system dependencies for production build
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    pkg-config \
    libssl-dev \
    libclang-dev \
    git \
    && rm -rf /var/lib/apt/lists/*

# Production optimization environment
ENV CARGO_BUILD_JOBS=8
ENV RUSTFLAGS="-C target-cpu=native -C opt-level=3 -C lto=fat -C codegen-units=1"
ENV CARGO_PROFILE_RELEASE_LTO=fat
ENV CARGO_PROFILE_RELEASE_PANIC=abort
ENV CARGO_PROFILE_RELEASE_STRIP=symbols

# Copy ALL source code
COPY . .

# Debug: Show what files were actually copied
RUN echo "=== CHECKING COPIED FILES ===" && \
    ls -la && \
    echo "=== LOOKING FOR CORE ===" && \
    find . -name "core" -type d || echo "core directory not found" && \
    echo "=== LOOKING FOR QNET-CORE ===" && \
    find . -name "*qnet*core*" || echo "qnet-core not found" && \
    echo "=== LOOKING FOR CARGO FILES ===" && \
    find . -name "Cargo.toml" || echo "no Cargo.toml found" && \
    echo "=== WORKSPACE CARGO.TOML ===" && \
    head -20 Cargo.toml 2>/dev/null || echo "workspace Cargo.toml not found"

# Build production binary with maximum optimization
RUN cargo build --release --bin qnet-node --locked

# Final production runtime image
FROM ubuntu:22.04

# Install production runtime dependencies
RUN apt-get update && apt-get install -y \
    libssl3 \
    curl \
    ca-certificates \
    netcat-openbsd \
    htop \
    && rm -rf /var/lib/apt/lists/*

# Create production user and directories
RUN groupadd -r qnet && useradd -r -g qnet qnet
RUN mkdir -p /app/{data,logs,config} && chown -R qnet:qnet /app

# Copy production binary
COPY --from=builder /build/target/release/qnet-node /usr/local/bin/qnet-node

# Set production permissions
RUN chmod +x /usr/local/bin/qnet-node

# Switch to production user
USER qnet
WORKDIR /app

# Production port exposure
EXPOSE 8545 8546 8547 9876 9877 9878 9945 9946 9947

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8545/health || exit 1

# Production entrypoint
CMD ["qnet-node"] 