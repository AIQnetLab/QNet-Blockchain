# Production QNet Blockchain Node - Direct Build
FROM rust:1.86-slim as builder

WORKDIR /build

# Install system dependencies for production build
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    pkg-config \
    libssl-dev \
    libclang-dev \
    git \
    && rm -rf /var/lib/apt/lists/*

# Optimized build environment
ENV CARGO_BUILD_JOBS=4
ENV CARGO_PROFILE_RELEASE_LTO=thin
ENV CARGO_PROFILE_RELEASE_PANIC=abort

# Copy dependency files first for layer caching
COPY Cargo.toml Cargo.lock ./
COPY core/*/Cargo.toml ./core/
COPY development/qnet-integration/Cargo.toml ./development/qnet-integration/

# Create dummy main for dependency pre-build
RUN mkdir -p development/qnet-integration/src/bin && \
    echo "fn main() {}" > development/qnet-integration/src/bin/qnet-node.rs && \
    mkdir -p core/qnet-core/src && echo "pub fn dummy() {}" > core/qnet-core/src/lib.rs && \
    mkdir -p core/qnet-consensus/src && echo "pub fn dummy() {}" > core/qnet-consensus/src/lib.rs && \
    mkdir -p core/qnet-mempool/src && echo "pub fn dummy() {}" > core/qnet-mempool/src/lib.rs && \
    mkdir -p core/qnet-state/src && echo "pub fn dummy() {}" > core/qnet-state/src/lib.rs && \
    mkdir -p core/qnet-sharding/src && echo "pub fn dummy() {}" > core/qnet-sharding/src/lib.rs

# Build dependencies only (cached layer)
RUN cargo build --release --bin qnet-node

# Copy actual source code
COPY . .

# Build final binary with real code
RUN cargo build --release --bin qnet-node

# Final production runtime image
FROM ubuntu:22.04

# Install production runtime dependencies
RUN apt-get update && apt-get install -y \
    libssl3 \
    curl \
    ca-certificates \
    netcat-openbsd \
    htop \
    && rm -rf /var/lib/apt/lists/*

# Create production user and directories
RUN groupadd -r qnet && useradd -r -g qnet qnet
RUN mkdir -p /app/{data,logs,config} && chown -R qnet:qnet /app

# Copy production binary
COPY --from=builder /build/target/release/qnet-node /usr/local/bin/qnet-node

# Set production permissions
RUN chmod +x /usr/local/bin/qnet-node

# Switch to production user
USER qnet
WORKDIR /app

# Production port exposure
EXPOSE 8545 8546 8547 9876 9877 9878 9945 9946 9947

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8545/health || exit 1

# Production entrypoint
CMD ["qnet-node"] 